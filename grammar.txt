program             ->  declaration* EOF

declaration         ->  variableDeclaration
                    |   statement

variableDeclaration ->  ( "Num" | "String" | "Boolean" ) IDENTIFIER ( "=" expression )? ";"
statement           ->  expressionStatement
                    |   outputStatement
                    |   simpleBlock
                    |   curlBlock
                    |   ifStatement
                    |   whileStatement
                    |   forStatement

simpleBlock         ->  "block" declaration* "endblock"
curlBlock           ->   "{" declaration* "}"

ifStatement         ->  "if" "(" expression ")" "=>" statement
                    |   "if" "(" expression ")"
                            declaration*
                        ("elseif" declaration*)*
                        ("else" declaration*)?
                        "endif"

whileStatement      ->  "while" "(" expression ")" "=>" statement
                    ->  "while" "(" expression ")" declaration* "endwhile"

expressionStatement ->  expression ";"
outputStatement     ->  "output"

expression          ->  logicOr
logicOr             ->  logicAnd ( "or" | "||" logicAnd )*
logicAnd            ->  logicEqual ( "and" | "&&" logicEqual )*
logicEqual               ->  comparison ( ( "!=" | "==" ) comparison )*
comparison          ->  term ( ( ">" | ">=" | "<" | "<=" ) term )*
term                ->  factor ( ( "+" | "-" ) factor )*
factor              ->  power ( ( "*" | "/" | "%" ) power )*
power               ->  unary ( "^" unary )*
unary               ->  ( "!" | "-" ) unary
                    |   primary
primary             ->  literal | grouping | IDENTIFIER

grouping            ->  "(" expression ")"
literal             ->  NUMBER | STRING | BOOLEAN

operator            ->  "==" | "!=" | ">" | ">=" | "<" | "<="
                    |   "+" | "-" | "*" | "/" | "%" | "^"
                    |   "."